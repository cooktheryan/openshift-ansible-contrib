#!/bin/bash
source ./vars &> /dev/null

while [ -z "$VPC_ID" ]; do
    VPC_ID=$(aws ec2 describe-vpcs \
    --query Vpcs[].VpcId[] \
    --filters Name=cidr,Values=$CIDR \
    --output text)
done

# Create the bastion security group
aws ec2 create-security-group \
--group-name $BASTION_SEC_GROUP \
--description "Security Group for OpenShift Bastion" \
--vpc-id $VPC_ID

while [ -z "$BASTION_SEC_GRP_ID" ]; do
    BASTION_SEC_GRP_ID=$(aws ec2 describe-security-groups \
    --query SecurityGroups[].GroupId[] \
    --filters Name=group-name,Values="$BASTION_SEC_GROUP" \
    --output text)
done

aws ec2 create-tags \
--resources $BASTION_SEC_GRP_ID \
--tags Key=Name,Value=$BASTION_SEC_GROUP

# Create the node security group
aws ec2 create-security-group \
--group-name $NODES_SEC_GROUP \
--description "Security Group for OpenShift Nodes" \
--vpc-id $VPC_ID

while [ -z "$NODES_SEC_GRP_ID" ]; do
    NODES_SEC_GRP_ID=$(aws ec2 describe-security-groups \
    --query SecurityGroups[].GroupId[] \
    --filters Name=group-name,Values="$NODES_SEC_GROUP" \
    --output text)
done

aws ec2 create-tags \
--resources $NODES_SEC_GRP_ID \
--tags Key=Name,Value=$NODES_SEC_GROUP

# Create the ETCD security group
aws ec2 create-security-group \
--group-name $ETCD_SEC_GROUP \
--description "Security Group for ETCD" \
--vpc-id $VPC_ID

ETCD_SEC_GRP_ID=$(aws ec2 describe-security-groups \
--query SecurityGroups[].GroupId[] \
--filters Name=group-name,Values=$ETCD_SEC_GROUP \
--output text)

aws ec2 create-tags \
--resources $ETCD_SEC_GRP_ID \
--tags Key=Name,Value=$ETCD_SEC_GROUP

# Create the Infra security group
aws ec2 create-security-group \
--group-name $INFRA_NODES_SEC_GROUP \
--description "Security Group for Infra OpenShift Node" \
--vpc-id $VPC_ID

while [ -z "$INFRA_NODE_SEC_GRP_ID" ]; do
    INFRA_NODE_SEC_GRP_ID=$(aws ec2 describe-security-groups \
    --query SecurityGroups[].GroupId[] \
    --filters Name=group-name,Values="$INFRA_NODES_SEC_GROUP" \
    --output text)
done

aws ec2 create-tags \
--resources $INFRA_NODE_SEC_GRP_ID \
--tags Key=Name,Value=$INFRA_NODES_SEC_GROUP

# Create the internal master ELB security group
aws ec2 create-security-group \
--group-name $INTERNAL_MASTER_ELB_SEC_GRP \
--description "Security Group for OpenShift Master ELB" \
--vpc-id $VPC_ID

while [ -z "$INTERNAL_INTERNAL_MASTER_ELB_SEC_GRP_ID" ]; do
    INTERNAL_INTERNAL_MASTER_ELB_SEC_GRP_ID=$(aws ec2 describe-security-groups \
    --query SecurityGroups[].GroupId[] \
    --filters Name=group-name,Values="$INTERNAL_MASTER_ELB_SEC_GRP" \
    --output text)
done

aws ec2 create-tags \
--resources $INTERNAL_INTERNAL_MASTER_ELB_SEC_GRP_ID

# Create the master ELB security group
aws ec2 create-security-group \
--group-name $MASTER_ELB_SEC_GRP \
--description "Security Group for OpenShift Master ELB" \
--vpc-id $VPC_ID

while [ -z "$MASTER_ELB_SEC_GRP_ID" ]; do
    MASTER_ELB_SEC_GRP_ID=$(aws ec2 describe-security-groups \
    --query SecurityGroups[].GroupId[] \
    --filters Name=group-name,Values="$MASTER_ELB_SEC_GRP" \
    --output text)
done

aws ec2 create-tags \
--resources $MASTER_ELB_SEC_GRP_ID \
--tags Key=Name,Value=$MASTER_ELB_SEC_GRP

# Create the master security group
aws ec2 create-security-group \
--group-name $MASTERS_SEC_GROUP \
--description "Security Group for OpenShift Master" \
--vpc-id $VPC_ID

MASTER_SEC_GRP_ID=$(aws ec2 describe-security-groups \
--query SecurityGroups[].GroupId[] \
--filters Name=group-name,Values=$MASTERS_SEC_GROUP \
--output text)

aws ec2 create-tags \
--resources $MASTER_SEC_GRP_ID \
--tags Key=Name,Value=$MASTERS_SEC_GROUP

# Create the router ELB security group
aws ec2 create-security-group \
--group-name $ROUTER_ELB_SEC_GRP \
--description "Security Group for OpenShift Router ELB" \
--vpc-id $VPC_ID

while [ -z "$ROUTER_ELB_SEC_GRP_ID" ]; do
    ROUTER_ELB_SEC_GRP_ID=$(aws ec2 describe-security-groups \
    --query SecurityGroups[].GroupId[] \
    --filters Name=group-name,Values="$ROUTER_ELB_SEC_GRP" \
    --output text)
done

aws ec2 create-tags \
--resources $ROUTER_ELB_SEC_GRP_ID \
--tags Key=Name,Value=$ROUTER_ELB_SEC_GRP

